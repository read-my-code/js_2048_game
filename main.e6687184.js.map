{"version":3,"sources":["scripts/main.js"],"names":["startButton","document","querySelector","gameCells","querySelectorAll","messageStart","messageLose","messageWin","gameRows","gameScore","scoreUpdateContainer","rowsCount","length","colsCount","score","slideHorizontally","direction","gameFieldBeforeMove","makeArrayFromCells","r","row","children","child","push","textContent","className","toLowerCase","cellsMergin","reverse","i","classList","add","addCell","slideVertically","c","randomizingNumInCell","arrayForRandomCell","randIndex","Math","floor","random","randNumber","randCell","filterZero","filter","cell","filteredRow","scoreUpdater","checkWin","checkLose","toString","array","forEach","some","element","remove","number","insertAdjacentHTML","setTimeout","firstElementChild","addEventListener","e","contains","ev","preventDefault","code"],"mappings":"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","file":"main.e6687184.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.button');\nconst gameCells = document.querySelectorAll('.field-cell');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst gameRows = document.querySelectorAll('.field-row');\nconst gameScore = document.querySelector('.game-score');\nconst scoreUpdateContainer = document.querySelector('.score-update-container');\nconst rowsCount = gameRows.length;\nconst colsCount = gameCells.length / rowsCount;\nlet score = 0;\n\nstartButton.addEventListener('click', (e) => {\n  if (startButton.classList.contains('start')) {\n    randomizingNumInCell();\n    randomizingNumInCell();\n    startButton.className = 'button restart';\n    startButton.textContent = 'Restart';\n    messageStart.classList.add('hidden');\n  } else if (startButton.classList.contains('restart')) {\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n\n    gameCells.forEach(cell => {\n      cell.textContent = '';\n      cell.className = 'field-cell';\n    });\n    randomizingNumInCell();\n    randomizingNumInCell();\n    score = 0;\n    gameScore.textContent = score;\n  }\n});\n\ndocument.addEventListener('keydown', ev => {\n  ev.preventDefault();\n\n  switch (ev.code) {\n    case 'ArrowLeft':\n      slideHorizontally('Left');\n      break;\n    case 'ArrowRight':\n      slideHorizontally('Right');\n      break;\n    case 'ArrowUp':\n      slideVertically('Up');\n      break;\n    case 'ArrowDown':\n      slideVertically('Down');\n      break;\n    default:\n      break;\n  }\n});\n\nfunction slideHorizontally(direction) {\n  const gameFieldBeforeMove = makeArrayFromCells();\n\n  for (let r = 0; r < rowsCount; r++) {\n    let row = [];\n\n    for (const child of gameRows[r].children) {\n      row.push(+child.textContent || 0);\n      child.className = 'field-cell';\n      child.textContent = '';\n    }\n\n    if (direction.toLowerCase() === 'left') {\n      row = cellsMergin(row);\n    } else if (direction.toLowerCase() === 'right') {\n      row = cellsMergin(row.reverse()).reverse();\n    }\n\n    for (let i = 0; i < gameRows[r].children.length; i++) {\n      if (row[i] > 0) {\n        gameRows[r].children[i].textContent = row[i];\n        gameRows[r].children[i].classList.add(`field-cell--${row[i]}`);\n      }\n    }\n  }\n  addCell(gameFieldBeforeMove);\n}\n\nfunction slideVertically(direction) {\n  const gameFieldBeforeMove = makeArrayFromCells();\n\n  for (let c = 0; c < colsCount; c++) {\n    let row = [];\n\n    for (let r = 0; r < rowsCount; r++) {\n      row.push(+gameRows[r].children[c].textContent || 0);\n      gameRows[r].children[c].className = 'field-cell';\n      gameRows[r].children[c].textContent = '';\n    }\n\n    if (direction.toLowerCase() === 'down') {\n      row = cellsMergin(row.reverse()).reverse();\n    } else if (direction.toLowerCase() === 'up') {\n      row = cellsMergin(row);\n    }\n\n    for (let r = 0; r < rowsCount; r++) {\n      if (row[r] > 0) {\n        gameRows[r].children[c].textContent = row[r];\n        gameRows[r].children[c].classList.add(`field-cell--${row[r]}`);\n      }\n    }\n  }\n  addCell(gameFieldBeforeMove);\n}\n\nfunction randomizingNumInCell() {\n  const arrayForRandomCell = [];\n\n  for (let i = 0; i < gameCells.length; i++) {\n    if (!gameCells[i].textContent) {\n      arrayForRandomCell.push(i);\n    }\n  }\n\n  if (arrayForRandomCell.length === 0) {\n    return;\n  }\n\n  const randIndex = Math.floor(Math.random() * arrayForRandomCell.length);\n  const randNumber = Math.random() > 0.9 ? 4 : 2;\n  const randCell = arrayForRandomCell[randIndex];\n\n  gameCells[randCell].classList\n    .add(`field-cell--${randNumber}`);\n\n  gameCells[randCell].textContent = `${randNumber}`;\n  gameScore.textContent = score;\n}\n\nfunction filterZero(row) {\n  return row.filter(cell => cell !== 0);\n}\n\nfunction cellsMergin(row) {\n  let filteredRow = filterZero(row);\n\n  for (let i = 0; i < filteredRow.length - 1; i++) {\n    if (filteredRow[i] === filteredRow[i + 1]) {\n      filteredRow[i] *= 2;\n      filteredRow[i + 1] = 0;\n      score += filteredRow[i];\n      scoreUpdater(filteredRow[i]);\n    }\n  }\n\n  filteredRow = filterZero(filteredRow);\n\n  while (filteredRow.length < colsCount) {\n    filteredRow.push(0);\n  }\n\n  return filteredRow;\n}\n\nfunction addCell(gameFieldBeforeMove) {\n  checkWin();\n\n  if (checkLose()) {\n    return;\n  }\n\n  const gameFieldAfterMove = makeArrayFromCells();\n\n  if (gameFieldAfterMove.toString() === gameFieldBeforeMove.toString()) {\n    return;\n  }\n  randomizingNumInCell();\n}\n\nfunction makeArrayFromCells() {\n  const array = [];\n\n  gameCells.forEach(cell => array.push(cell.textContent));\n\n  return array;\n}\n\nfunction checkWin() {\n  if (makeArrayFromCells().some(element => +element === 2048)) {\n    messageWin.classList.remove('hidden');\n\n    return true;\n  }\n}\n\nfunction checkLose() {\n  if (makeArrayFromCells().some(element => element === '')) {\n    return false;\n  }\n\n  for (let r = 0; r < gameRows.length; r++) {\n    for (let c = 0; c < gameRows[r].children.length - 1; c++) {\n      if (gameRows[r].children[c].textContent\n        === gameRows[r].children[c + 1].textContent) {\n        return false;\n      }\n    }\n  }\n\n  for (let c = 0; c < gameRows[0].children.length; c++) {\n    for (let r = 0; r < gameRows.length - 1; r++) {\n      if (gameRows[r].children[c].textContent\n        === gameRows[r + 1].children[c].textContent) {\n        return false;\n      }\n    }\n  }\n  messageLose.classList.remove('hidden');\n\n  return true;\n}\n\nfunction scoreUpdater(number) {\n  scoreUpdateContainer.insertAdjacentHTML('beforeend', `\n      <span class=\"score-update\">+${number}</span>\n    `);\n\n  setTimeout(() => {\n    scoreUpdateContainer.firstElementChild.remove();\n  }, 1500);\n}\n"]}